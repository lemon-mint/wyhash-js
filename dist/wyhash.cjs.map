{"version":3,"sources":["../wyhash.ts"],"sourcesContent":["function _mul64(x: bigint, y: bigint): [bigint, bigint] {\n  x = BigInt.asUintN(64, x);\n  y = BigInt.asUintN(64, y);\n\n  const mask32 = BigInt.asUintN(64, (BigInt(1) << BigInt(32)) - BigInt(1));\n  const x0 = BigInt.asUintN(64, x & mask32);\n  const x1 = BigInt.asUintN(64, x >> BigInt(32));\n  const y0 = BigInt.asUintN(64, y & mask32);\n  const y1 = BigInt.asUintN(64, y >> BigInt(32));\n  const w0 = BigInt.asUintN(64, x0 * y0);\n  const t = BigInt.asUintN(\n    64,\n    BigInt.asUintN(64, x1 * y0) + BigInt.asUintN(64, w0 >> BigInt(32))\n  );\n  let w1 = BigInt.asUintN(64, t & mask32);\n  const w2 = BigInt.asUintN(64, t >> BigInt(32));\n  w1 += BigInt.asUintN(64, x0 * y1);\n  w1 = BigInt.asUintN(64, w1);\n  const hi = BigInt.asUintN(\n    64,\n    BigInt.asUintN(64, BigInt.asUintN(64, x1 * y1) + w2) +\n      BigInt.asUintN(64, w1 >> BigInt(32))\n  );\n  const lo = BigInt.asUintN(64, x * y);\n  return [hi, lo];\n}\n\nfunction _wymix(a: bigint, b: bigint): bigint {\n  a = BigInt.asUintN(64, a);\n  b = BigInt.asUintN(64, b);\n  [b, a] = _mul64(a, b);\n  return BigInt.asUintN(64, a ^ b);\n}\n\nfunction _wyr8(p: Uint8Array, offset: number): bigint {\n  return BigInt.asUintN(\n    64,\n    BigInt(p[offset + 0]!) |\n      (BigInt(p[offset + 1]!) << BigInt(8)) |\n      (BigInt(p[offset + 2]!) << BigInt(16)) |\n      (BigInt(p[offset + 3]!) << BigInt(24)) |\n      (BigInt(p[offset + 4]!) << BigInt(32)) |\n      (BigInt(p[offset + 5]!) << BigInt(40)) |\n      (BigInt(p[offset + 6]!) << BigInt(48)) |\n      (BigInt(p[offset + 7]!) << BigInt(56))\n  );\n}\n\nfunction _wyr4(p: Uint8Array, offset: number): bigint {\n  return BigInt.asUintN(\n    64,\n    BigInt(p[offset + 0]!) |\n      (BigInt(p[offset + 1]!) << BigInt(8)) |\n      (BigInt(p[offset + 2]!) << BigInt(16)) |\n      (BigInt(p[offset + 3]!) << BigInt(24))\n  );\n}\n\nfunction _wyr3(p: Uint8Array, offset: number, k: number): bigint {\n  return BigInt.asUintN(\n    64,\n    BigInt.asUintN(\n      64,\n      BigInt.asUintN(64, BigInt(p[offset + 0]!)) << BigInt(16)\n    ) |\n      BigInt.asUintN(\n        64,\n        BigInt.asUintN(64, BigInt(p[offset + (k >> 1)]!)) << BigInt(8)\n      ) |\n      BigInt.asUintN(64, BigInt(p[offset + k - 1]!))\n  );\n}\n\nconst _wyp: [bigint, bigint, bigint, bigint] = [\n  BigInt(\"0xa0761d6478bd642f\"),\n  BigInt(\"0xe7037ed1a0b428db\"),\n  BigInt(\"0x8ebc6af09c88c6e3\"),\n  BigInt(\"0x589965cc75374cc3\"),\n];\n\nfunction _wyhash(\n  key: Uint8Array,\n  seed: bigint,\n  secret: [bigint, bigint, bigint, bigint]\n): bigint {\n  let p = 0;\n  const len = key.length;\n  seed ^= secret[0];\n  let a: bigint = BigInt(0);\n  let b: bigint = BigInt(0);\n\n  if (len <= 16) {\n    if (len >= 4) {\n      a = BigInt.asUintN(\n        64,\n        (_wyr4(key, p) << BigInt(32)) | _wyr4(key, p + ((len >>> 3) << 2))\n      );\n      b = BigInt.asUintN(\n        64,\n        (_wyr4(key, p + len - 4) << BigInt(32)) | _wyr4(key, p + len - 4 - ((len >>> 3) << 2))\n      );\n    } else if (len > 0) {\n      a = _wyr3(key, p, len);\n      b = BigInt(0);\n    }\n  } else {\n    let i = len;\n    if (i > 48) {\n      let see1 = seed;\n      let see2 = seed;\n      do {\n        seed = _wymix(_wyr8(key, p) ^ secret[1], _wyr8(key, p + 8) ^ seed);\n        see1 = _wymix(\n          _wyr8(key, p + 16) ^ secret[2],\n          _wyr8(key, p + 24) ^ see1\n        );\n        see2 = _wymix(\n          _wyr8(key, p + 32) ^ secret[3],\n          _wyr8(key, p + 40) ^ see2\n        );\n        p = p + 48;\n        i -= 48;\n      } while (i > 48);\n      seed ^= see1 ^ see2;\n    }\n\n    while (i > 16) {\n      seed = _wymix(_wyr8(key, p) ^ secret[1], _wyr8(key, p + 8) ^ seed);\n      i -= 16;\n      p = p + 16;\n    }\n\n    a = _wyr8(key, p + i - 16);\n    b = _wyr8(key, p + i - 8);\n  }\n\n  return _wymix(secret[1] ^ BigInt(len), _wymix(a ^ secret[1], b ^ seed));\n}\n\nexport function wyhash(b: Uint8Array, seed: bigint): bigint {\n  return _wyhash(b, seed, _wyp);\n}\n\nexport function wyhash_str(s: string, seed: bigint): bigint {\n  return _wyhash(new TextEncoder().encode(s), seed, _wyp);\n}\n"],"mappings":"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","names":[]}